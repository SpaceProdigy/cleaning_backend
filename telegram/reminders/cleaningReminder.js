import dayjs from "dayjs";
import { dinamicModel } from "../../models/cleaningSchedules.js";
import { messageBlueCorridor } from "./messages.js";
import { corridorChatMap } from "../locales.js";
import { bot } from "../telegram-bot.js";
import { SentMessages } from "../../models/sentMessages.js";

const options = {
  parse_mode: "HTML",
};

export const cleaningReminder = async (req, res) => {
  try {
    const { group } = req.params;
    const today = dayjs().format("YYYY-MM-DD");

    const alreadySent = await SentMessages.findOne({ group, date: today });

    if (alreadySent) {
      console.log(`üîπ –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –≥—Ä—É–ø–ø—ã ${group} —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–µ–≥–æ–¥–Ω—è.`);
      return res.json(alreadySent);
    }

    const tasks = await dinamicModel(group)
      .find({
        date: today,
      })
      .sort({ task: 1, roomNumber: 1 });

    if (!tasks.length) {
      console.log(`–ù–µ—Ç –∑–∞–¥–∞—á –¥–ª—è –≥—Ä—É–ø–ø—ã ${group}.`);
      return res.status(200).send(`–ù–µ—Ç –∑–∞–¥–∞—á –¥–ª—è –≥—Ä—É–ø–ø—ã ${group}.`);
    }

    const chatId = corridorChatMap[group];

    if (!chatId) {
      console.log(`–ù–µ—Ç —á–∞—Ç–∞ –¥–ª—è –≥—Ä—É–ø–ø—ã ${group}.`);
      return res.status(400).send(`–ù–µ—Ç —á–∞—Ç–∞ –¥–ª—è –≥—Ä—É–ø–ø—ã ${group}.`);
    }

    try {
      await bot.sendMessage(chatId, messageBlueCorridor(tasks), options);
      console.log(`–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –≥—Ä—É–ø–ø—É ${group}`);
      // –ò—â–µ–º –∑–∞–ø–∏—Å—å –ø–æ –≥—Ä—É–ø–ø–µ –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –µ–µ
      const updatedMessage = await SentMessages.findOneAndUpdate(
        { group }, // –ò—â–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∑–∞–ø–∏—Å—å –ø–æ –≥—Ä—É–ø–ø–µ
        { date: today, alreadySent: true, chatId }, // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        { upsert: true, new: true } // –ï—Å–ª–∏ –Ω–µ—Ç –∑–∞–ø–∏—Å–∏ - —Å–æ–∑–¥–∞–µ–º, –µ—Å–ª–∏ –µ—Å—Ç—å - –æ–±–Ω–æ–≤–ª—è–µ–º
      );

      console.log(`–ó–∞–ø–∏—Å—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞/—Å–æ–∑–¥–∞–Ω–∞:`, updatedMessage);

      return res.json({ group, date: today, alreadySent: false, chatId });
    } catch (error) {
      console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É ${group}:`, error);
      return res
        .status(500)
        .send(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É ${group}.`);
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞:", error);
    return res.status(500).send("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è.");
  }
};
